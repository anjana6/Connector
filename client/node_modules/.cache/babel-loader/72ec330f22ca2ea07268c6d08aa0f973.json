{"ast":null,"code":"'use strict';\n\nconst documentSchemaSymbol = require('../../helpers/symbols').documentSchemaSymbol;\n\nconst get = require('../../helpers/get');\n\nconst getSymbol = require('../../helpers/symbols').getSymbol;\n\nconst utils = require('../../utils');\n\nlet Document;\n/*!\n * exports\n */\n\nexports.compile = compile;\nexports.defineKey = defineKey;\n/*!\n * Compiles schemas.\n */\n\nfunction compile(tree, proto, prefix, options) {\n  Document = Document || require('../../document');\n  const keys = Object.keys(tree);\n  const len = keys.length;\n  let limb;\n  let key;\n\n  for (let i = 0; i < len; ++i) {\n    key = keys[i];\n    limb = tree[key];\n    const hasSubprops = utils.isPOJO(limb) && Object.keys(limb).length && (!limb[options.typeKey] || options.typeKey === 'type' && limb.type.type);\n    const subprops = hasSubprops ? limb : null;\n    defineKey(key, subprops, proto, prefix, keys, options);\n  }\n}\n/*!\n * Defines the accessor named prop on the incoming prototype.\n */\n\n\nfunction defineKey(prop, subprops, prototype, prefix, keys, options) {\n  Document = Document || require('../../document');\n  const path = (prefix ? prefix + '.' : '') + prop;\n  prefix = prefix || '';\n\n  if (subprops) {\n    Object.defineProperty(prototype, prop, {\n      enumerable: true,\n      configurable: true,\n      get: function () {\n        const _this = this;\n\n        if (!this.$__.getters) {\n          this.$__.getters = {};\n        }\n\n        if (!this.$__.getters[path]) {\n          const nested = Object.create(Document.prototype, getOwnPropertyDescriptors(this)); // save scope for nested getters/setters\n\n          if (!prefix) {\n            nested.$__.scope = this;\n          }\n\n          nested.$__.nestedPath = path;\n          Object.defineProperty(nested, 'schema', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: prototype.schema\n          });\n          Object.defineProperty(nested, documentSchemaSymbol, {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: prototype.schema\n          });\n          Object.defineProperty(nested, 'toObject', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: function () {\n              return utils.clone(_this.get(path, null, {\n                virtuals: get(this, 'schema.options.toObject.virtuals', null)\n              }));\n            }\n          });\n          Object.defineProperty(nested, 'toJSON', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: function () {\n              return _this.get(path, null, {\n                virtuals: get(_this, 'schema.options.toJSON.virtuals', null)\n              });\n            }\n          });\n          Object.defineProperty(nested, '$__isNested', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: true\n          });\n\n          const _isEmptyOptions = Object.freeze({\n            minimize: true,\n            virtuals: false,\n            getters: false,\n            transform: false\n          });\n\n          Object.defineProperty(nested, '$isEmpty', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: function () {\n              return Object.keys(this.get(path, null, _isEmptyOptions) || {}).length === 0;\n            }\n          });\n          compile(subprops, nested, path, options);\n          this.$__.getters[path] = nested;\n        }\n\n        return this.$__.getters[path];\n      },\n      set: function (v) {\n        if (v instanceof Document) {\n          v = v.toObject({\n            transform: false\n          });\n        }\n\n        const doc = this.$__.scope || this;\n        return doc.$set(path, v);\n      }\n    });\n  } else {\n    Object.defineProperty(prototype, prop, {\n      enumerable: true,\n      configurable: true,\n      get: function () {\n        return this[getSymbol].call(this.$__.scope || this, path);\n      },\n      set: function (v) {\n        return this.$set.call(this.$__.scope || this, path, v);\n      }\n    });\n  }\n} // gets descriptors for all properties of `object`\n// makes all properties non-enumerable to match previous behavior to #2211\n\n\nfunction getOwnPropertyDescriptors(object) {\n  const result = {};\n  Object.getOwnPropertyNames(object).forEach(function (key) {\n    result[key] = Object.getOwnPropertyDescriptor(object, key); // Assume these are schema paths, ignore them re: #5470\n\n    if (result[key].get) {\n      delete result[key];\n      return;\n    }\n\n    result[key].enumerable = ['isNew', '$__', 'errors', '_doc', '$locals'].indexOf(key) === -1;\n  });\n  return result;\n}","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/node_modules/mongoose/lib/helpers/document/compile.js"],"names":["documentSchemaSymbol","require","get","getSymbol","utils","Document","exports","compile","defineKey","tree","proto","prefix","options","keys","Object","len","length","limb","key","i","hasSubprops","isPOJO","typeKey","type","subprops","prop","prototype","path","defineProperty","enumerable","configurable","_this","$__","getters","nested","create","getOwnPropertyDescriptors","scope","nestedPath","writable","value","schema","clone","virtuals","_isEmptyOptions","freeze","minimize","transform","set","v","toObject","doc","$set","call","object","result","getOwnPropertyNames","forEach","getOwnPropertyDescriptor","indexOf"],"mappings":"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","sourcesContent":["'use strict';\n\nconst documentSchemaSymbol = require('../../helpers/symbols').documentSchemaSymbol;\nconst get = require('../../helpers/get');\nconst getSymbol = require('../../helpers/symbols').getSymbol;\nconst utils = require('../../utils');\n\nlet Document;\n\n/*!\n * exports\n */\n\nexports.compile = compile;\nexports.defineKey = defineKey;\n\n/*!\n * Compiles schemas.\n */\n\nfunction compile(tree, proto, prefix, options) {\n  Document = Document || require('../../document');\n  const keys = Object.keys(tree);\n  const len = keys.length;\n  let limb;\n  let key;\n\n  for (let i = 0; i < len; ++i) {\n    key = keys[i];\n    limb = tree[key];\n\n    const hasSubprops = utils.isPOJO(limb) && Object.keys(limb).length &&\n      (!limb[options.typeKey] || (options.typeKey === 'type' && limb.type.type));\n    const subprops = hasSubprops ? limb : null;\n\n    defineKey(key, subprops, proto, prefix, keys, options);\n  }\n}\n\n/*!\n * Defines the accessor named prop on the incoming prototype.\n */\n\nfunction defineKey(prop, subprops, prototype, prefix, keys, options) {\n  Document = Document || require('../../document');\n  const path = (prefix ? prefix + '.' : '') + prop;\n  prefix = prefix || '';\n\n  if (subprops) {\n    Object.defineProperty(prototype, prop, {\n      enumerable: true,\n      configurable: true,\n      get: function() {\n        const _this = this;\n        if (!this.$__.getters) {\n          this.$__.getters = {};\n        }\n\n        if (!this.$__.getters[path]) {\n          const nested = Object.create(Document.prototype, getOwnPropertyDescriptors(this));\n\n          // save scope for nested getters/setters\n          if (!prefix) {\n            nested.$__.scope = this;\n          }\n          nested.$__.nestedPath = path;\n\n          Object.defineProperty(nested, 'schema', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: prototype.schema\n          });\n\n          Object.defineProperty(nested, documentSchemaSymbol, {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: prototype.schema\n          });\n\n          Object.defineProperty(nested, 'toObject', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: function() {\n              return utils.clone(_this.get(path, null, {\n                virtuals: get(this, 'schema.options.toObject.virtuals', null)\n              }));\n            }\n          });\n\n          Object.defineProperty(nested, 'toJSON', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: function() {\n              return _this.get(path, null, {\n                virtuals: get(_this, 'schema.options.toJSON.virtuals', null)\n              });\n            }\n          });\n\n          Object.defineProperty(nested, '$__isNested', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: true\n          });\n\n          const _isEmptyOptions = Object.freeze({\n            minimize: true,\n            virtuals: false,\n            getters: false,\n            transform: false\n          });\n          Object.defineProperty(nested, '$isEmpty', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: function() {\n              return Object.keys(this.get(path, null, _isEmptyOptions) || {}).length === 0;\n            }\n          });\n\n          compile(subprops, nested, path, options);\n          this.$__.getters[path] = nested;\n        }\n\n        return this.$__.getters[path];\n      },\n      set: function(v) {\n        if (v instanceof Document) {\n          v = v.toObject({ transform: false });\n        }\n        const doc = this.$__.scope || this;\n        return doc.$set(path, v);\n      }\n    });\n  } else {\n    Object.defineProperty(prototype, prop, {\n      enumerable: true,\n      configurable: true,\n      get: function() {\n        return this[getSymbol].call(this.$__.scope || this, path);\n      },\n      set: function(v) {\n        return this.$set.call(this.$__.scope || this, path, v);\n      }\n    });\n  }\n}\n\n// gets descriptors for all properties of `object`\n// makes all properties non-enumerable to match previous behavior to #2211\nfunction getOwnPropertyDescriptors(object) {\n  const result = {};\n\n  Object.getOwnPropertyNames(object).forEach(function(key) {\n    result[key] = Object.getOwnPropertyDescriptor(object, key);\n    // Assume these are schema paths, ignore them re: #5470\n    if (result[key].get) {\n      delete result[key];\n      return;\n    }\n    result[key].enumerable = ['isNew', '$__', 'errors', '_doc', '$locals'].indexOf(key) === -1;\n  });\n\n  return result;\n}\n"]},"metadata":{},"sourceType":"script"}