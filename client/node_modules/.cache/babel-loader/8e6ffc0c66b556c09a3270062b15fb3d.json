{"ast":null,"code":"/*!\n * Module dependencies.\n */\n'use strict';\n\nconst NodeJSDocument = require('./document');\n\nconst EventEmitter = require('events').EventEmitter;\n\nconst MongooseError = require('./error/index');\n\nconst Schema = require('./schema');\n\nconst ObjectId = require('./types/objectid');\n\nconst ValidationError = MongooseError.ValidationError;\n\nconst applyHooks = require('./helpers/model/applyHooks');\n\nconst utils = require('./utils');\n/**\n * Document constructor.\n *\n * @param {Object} obj the values to set\n * @param {Object} [fields] optional object containing the fields which were selected in the query returning this document and any populated paths data\n * @param {Boolean} [skipId] bool, should we auto create an ObjectId _id\n * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter\n * @event `init`: Emitted on a document after it has was retrieved from the db and fully hydrated by Mongoose.\n * @event `save`: Emitted when the document is successfully saved\n * @api private\n */\n\n\nfunction Document(obj, schema, fields, skipId, skipInit) {\n  if (!(this instanceof Document)) {\n    return new Document(obj, schema, fields, skipId, skipInit);\n  }\n\n  if (utils.isObject(schema) && !schema.instanceOfSchema) {\n    schema = new Schema(schema);\n  } // When creating EmbeddedDocument, it already has the schema and he doesn't need the _id\n\n\n  schema = this.schema || schema; // Generate ObjectId if it is missing, but it requires a scheme\n\n  if (!this.schema && schema.options._id) {\n    obj = obj || {};\n\n    if (obj._id === undefined) {\n      obj._id = new ObjectId();\n    }\n  }\n\n  if (!schema) {\n    throw new MongooseError.MissingSchemaError();\n  }\n\n  this.$__setSchema(schema);\n  NodeJSDocument.call(this, obj, fields, skipId, skipInit);\n  applyHooks(this, schema, {\n    decorateDoc: true\n  }); // apply methods\n\n  for (const m in schema.methods) {\n    this[m] = schema.methods[m];\n  } // apply statics\n\n\n  for (const s in schema.statics) {\n    this[s] = schema.statics[s];\n  }\n}\n/*!\n * Inherit from the NodeJS document\n */\n\n\nDocument.prototype = Object.create(NodeJSDocument.prototype);\nDocument.prototype.constructor = Document;\n/*!\n * ignore\n */\n\nDocument.events = new EventEmitter();\n/*!\n * Browser doc exposes the event emitter API\n */\n\nDocument.$emitter = new EventEmitter();\nutils.each(['on', 'once', 'emit', 'listeners', 'removeListener', 'setMaxListeners', 'removeAllListeners', 'addListener'], function (emitterFn) {\n  Document[emitterFn] = function () {\n    return Document.$emitter[emitterFn].apply(Document.$emitter, arguments);\n  };\n});\n/*!\n * Module exports.\n */\n\nDocument.ValidationError = ValidationError;\nmodule.exports = exports = Document;","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/node_modules/mongoose/lib/browserDocument.js"],"names":["NodeJSDocument","require","EventEmitter","MongooseError","Schema","ObjectId","ValidationError","applyHooks","utils","Document","obj","schema","fields","skipId","skipInit","isObject","instanceOfSchema","options","_id","undefined","MissingSchemaError","$__setSchema","call","decorateDoc","m","methods","s","statics","prototype","Object","create","constructor","events","$emitter","each","emitterFn","apply","arguments","module","exports"],"mappings":"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","sourcesContent":["/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst NodeJSDocument = require('./document');\nconst EventEmitter = require('events').EventEmitter;\nconst MongooseError = require('./error/index');\nconst Schema = require('./schema');\nconst ObjectId = require('./types/objectid');\nconst ValidationError = MongooseError.ValidationError;\nconst applyHooks = require('./helpers/model/applyHooks');\nconst utils = require('./utils');\n\n/**\n * Document constructor.\n *\n * @param {Object} obj the values to set\n * @param {Object} [fields] optional object containing the fields which were selected in the query returning this document and any populated paths data\n * @param {Boolean} [skipId] bool, should we auto create an ObjectId _id\n * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter\n * @event `init`: Emitted on a document after it has was retrieved from the db and fully hydrated by Mongoose.\n * @event `save`: Emitted when the document is successfully saved\n * @api private\n */\n\nfunction Document(obj, schema, fields, skipId, skipInit) {\n  if (!(this instanceof Document)) {\n    return new Document(obj, schema, fields, skipId, skipInit);\n  }\n\n  if (utils.isObject(schema) && !schema.instanceOfSchema) {\n    schema = new Schema(schema);\n  }\n\n  // When creating EmbeddedDocument, it already has the schema and he doesn't need the _id\n  schema = this.schema || schema;\n\n  // Generate ObjectId if it is missing, but it requires a scheme\n  if (!this.schema && schema.options._id) {\n    obj = obj || {};\n\n    if (obj._id === undefined) {\n      obj._id = new ObjectId();\n    }\n  }\n\n  if (!schema) {\n    throw new MongooseError.MissingSchemaError();\n  }\n\n  this.$__setSchema(schema);\n\n  NodeJSDocument.call(this, obj, fields, skipId, skipInit);\n\n  applyHooks(this, schema, { decorateDoc: true });\n\n  // apply methods\n  for (const m in schema.methods) {\n    this[m] = schema.methods[m];\n  }\n  // apply statics\n  for (const s in schema.statics) {\n    this[s] = schema.statics[s];\n  }\n}\n\n/*!\n * Inherit from the NodeJS document\n */\n\nDocument.prototype = Object.create(NodeJSDocument.prototype);\nDocument.prototype.constructor = Document;\n\n/*!\n * ignore\n */\n\nDocument.events = new EventEmitter();\n\n/*!\n * Browser doc exposes the event emitter API\n */\n\nDocument.$emitter = new EventEmitter();\n\nutils.each(\n  ['on', 'once', 'emit', 'listeners', 'removeListener', 'setMaxListeners',\n    'removeAllListeners', 'addListener'],\n  function(emitterFn) {\n    Document[emitterFn] = function() {\n      return Document.$emitter[emitterFn].apply(Document.$emitter, arguments);\n    };\n  });\n\n/*!\n * Module exports.\n */\n\nDocument.ValidationError = ValidationError;\nmodule.exports = exports = Document;\n"]},"metadata":{},"sourceType":"script"}