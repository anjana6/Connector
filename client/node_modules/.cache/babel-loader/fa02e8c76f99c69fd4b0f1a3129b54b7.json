{"ast":null,"code":"'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n/**\n * The options defined on an Array schematype.\n *\n * ####Example:\n *\n *     const schema = new Schema({ tags: [String] });\n *     schema.path('tags').options; // SchemaArrayOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaArrayOptions\n */\n\n\nclass SchemaArrayOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n/**\n * If this is an array of strings, an array of allowed values for this path.\n * Throws an error if this array isn't an array of strings.\n *\n * @api public\n * @property enum\n * @memberOf SchemaArrayOptions\n * @type Array\n * @instance\n */\n\n\nObject.defineProperty(SchemaArrayOptions.prototype, 'enum', opts);\n/*!\n * ignore\n */\n\nmodule.exports = SchemaArrayOptions;","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/node_modules/mongoose/lib/options/SchemaArrayOptions.js"],"names":["SchemaTypeOptions","require","SchemaArrayOptions","opts","Object","defineProperty","prototype","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAAjC;AAEA;;;;;;;;;;;;;;AAaA,MAAMC,kBAAN,SAAiCF,iBAAjC,CAAmD;;AAEnD,MAAMG,IAAI,GAAGF,OAAO,CAAC,mBAAD,CAApB;AAEA;;;;;;;;;;;;AAWAG,MAAM,CAACC,cAAP,CAAsBH,kBAAkB,CAACI,SAAzC,EAAoD,MAApD,EAA4DH,IAA5D;AAEA;;;;AAIAI,MAAM,CAACC,OAAP,GAAiBN,kBAAjB","sourcesContent":["'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\n * The options defined on an Array schematype.\n *\n * ####Example:\n *\n *     const schema = new Schema({ tags: [String] });\n *     schema.path('tags').options; // SchemaArrayOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaArrayOptions\n */\n\nclass SchemaArrayOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n\n/**\n * If this is an array of strings, an array of allowed values for this path.\n * Throws an error if this array isn't an array of strings.\n *\n * @api public\n * @property enum\n * @memberOf SchemaArrayOptions\n * @type Array\n * @instance\n */\n\nObject.defineProperty(SchemaArrayOptions.prototype, 'enum', opts);\n\n/*!\n * ignore\n */\n\nmodule.exports = SchemaArrayOptions;"]},"metadata":{},"sourceType":"script"}