{"ast":null,"code":"import _objectSpread from \"D:\\\\Other\\\\Git\\\\Developer-Connector\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, ADD_COMMENT, REMOVE_COMMENT } from '../action/Type';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default ((state = initialState, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case GET_POSTS:\n      return _objectSpread({}, state, {\n        posts: payload,\n        loading: false\n      });\n\n    case POST_ERROR:\n      return _objectSpread({}, state, {\n        error: payload,\n        loading: false\n      });\n\n    case UPDATE_LIKES:\n      return _objectSpread({}, state, {\n        posts: state.posts.map(post => post._id === payload.postId ? _objectSpread({}, post, {\n          likes: payload.likes\n        }) : post),\n        loading: false\n      });\n\n    case ADD_POST:\n      return _objectSpread({}, state, {\n        posts: [...state.posts, payload],\n        loading: false\n      });\n\n    case DELETE_POST:\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      });\n\n    case ADD_COMMENT:\n      return _objectSpread({}, state, {\n        post: _objectSpread({}, state.post, {\n          comment: payload\n        })\n      });\n\n    case REMOVE_COMMENT:\n      return _objectSpread({}, state, {\n        post: {}\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/client/src/reducer/postReducer.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","state","action","type","payload","map","_id","postId","likes","filter","comment"],"mappings":";AAAA,SAAQA,SAAR,EAAkBC,UAAlB,EAA6BC,YAA7B,EAA2CC,WAA3C,EAAuDC,QAAvD,EAAgEC,WAAhE,EAA4EC,cAA5E,QAAiG,gBAAjG;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,OAAO,EAAC,IAHS;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,gBAAe,CAACC,KAAK,GAACL,YAAP,EAAoBM,MAApB,KAA+B;AAAA,QACnCC,IADmC,GACnBD,MADmB,CACnCC,IADmC;AAAA,QAC9BC,OAD8B,GACnBF,MADmB,CAC9BE,OAD8B;;AAG1C,UAAOD,IAAP;AACI,SAAKd,SAAL;AACI,+BACOY,KADP;AACaJ,QAAAA,KAAK,EAACO,OADnB;AAC2BL,QAAAA,OAAO,EAAC;AADnC;;AAGJ,SAAKT,UAAL;AACI,+BACOW,KADP;AACaD,QAAAA,KAAK,EAACI,OADnB;AAC2BL,QAAAA,OAAO,EAAC;AADnC;;AAGJ,SAAKR,YAAL;AACI,+BACOU,KADP;AACaJ,QAAAA,KAAK,EAACI,KAAK,CAACJ,KAAN,CAAYQ,GAAZ,CAAgBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACG,MAArB,qBAAiCT,IAAjC;AAAsCU,UAAAA,KAAK,EAACJ,OAAO,CAACI;AAApD,aAA6DV,IAArF,CADnB;AAEIC,QAAAA,OAAO,EAAC;AAFZ;;AAIJ,SAAKN,QAAL;AACI,+BACOQ,KADP;AACaJ,QAAAA,KAAK,EAAC,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAgBO,OAAhB,CADnB;AAC4CL,QAAAA,OAAO,EAAC;AADpD;;AAGJ,SAAKP,WAAL;AACI,+BACOS,KADP;AACaJ,QAAAA,KAAK,EAACI,KAAK,CAACJ,KAAN,CAAYY,MAAZ,CAAmBX,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAxC,CADnB;AAEIL,QAAAA,OAAO,EAAC;AAFZ;;AAIJ,SAAKL,WAAL;AACI,+BACOO,KADP;AACaH,QAAAA,IAAI,oBAAKG,KAAK,CAACH,IAAX;AAAgBY,UAAAA,OAAO,EAACN;AAAxB;AADjB;;AAGJ,SAAKT,cAAL;AACI,+BACOM,KADP;AACaH,QAAAA,IAAI,EAAC;AADlB;;AAGA;AACI,aAAOG,KAAP;AAhCZ;AAkCH,CArCD","sourcesContent":["import {GET_POSTS,POST_ERROR,UPDATE_LIKES, DELETE_POST,ADD_POST,ADD_COMMENT,REMOVE_COMMENT} from '../action/Type';\r\n\r\nconst initialState = {\r\n    posts:[],\r\n    post: null,\r\n    loading:true,\r\n    error: {}\r\n}\r\n\r\nexport default (state=initialState,action) => {\r\n    const {type,payload} = action;\r\n\r\n    switch(type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,posts:payload,loading:false\r\n            };\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,error:payload,loading:false\r\n            };\r\n        case UPDATE_LIKES:\r\n            return{\r\n                ...state,posts:state.posts.map(post => post._id === payload.postId? {...post,likes:payload.likes} : post),\r\n                loading:false\r\n            };\r\n        case ADD_POST:\r\n            return{\r\n                ...state,posts:[...state.posts,payload],loading:false \r\n            }\r\n        case DELETE_POST:\r\n            return{\r\n                ...state,posts:state.posts.filter(post => post._id !== payload),\r\n                loading:false\r\n            }\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,post:{...state.post,comment:payload}\r\n            }  \r\n        case REMOVE_COMMENT:\r\n            return{\r\n                ...state,post:{}\r\n            }  \r\n            default:\r\n                return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}