{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\Git\\\\Developer-Connector\\\\client\\\\src\\\\component\\\\post\\\\Post.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getPost } from '../../action/PostAction';\nimport PostItem from '../posts/PostItem';\nimport { Link } from 'react-router-dom';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"ui button teal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Back To Posts\"), React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), post.comments.map(comment => React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/client/src/component/post/Post.js"],"names":["React","Fragment","useEffect","connect","Spinner","getPost","PostItem","Link","CommentForm","CommentItem","Post","post","loading","match","params","id","_id","comments","map","comment","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAsB,mBAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGC,MAAMC,IAAI,GAAG,CAAC;AAACL,EAAAA,OAAD;AAASM,EAAAA,IAAI,EAAE;AAACA,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAf;AAA8BC,EAAAA;AAA9B,CAAD,KAA0C;AACnDX,EAAAA,SAAS,CAAC,MAAM;AACbG,IAAAA,OAAO,CAACQ,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACF,GAFQ,EAEN,CAACV,OAAD,CAFM,CAAT;AAGD,SAAOO,OAAO,IAAID,IAAI,KAAK,IAApB,GAA2B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,GACP,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEA,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAIA,IAAlB;AAAwB,IAAA,WAAW,EAAI,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAKA,IAAI,CAACK,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,EAICL,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IACtB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACH,GAA1B;AAA+B,IAAA,OAAO,EAAEG,OAAxC;AAAiD,IAAA,MAAM,EAAER,IAAI,CAACK,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAJD,CADJ,CADA;AAYH,CAhBA;;AAiBD,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAChCV,EAAAA,IAAI,EAACU,KAAK,CAACV;AADqB,CAAZ,CAAxB;;AAIA,eAAeR,OAAO,CAACiB,eAAD,EAAiB;AAACf,EAAAA;AAAD,CAAjB,CAAP,CAAmCK,IAAnC,CAAf","sourcesContent":["import React,{Fragment,useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport {getPost} from '../../action/PostAction';\r\nimport PostItem from  '../posts/PostItem';\r\nimport {Link} from 'react-router-dom';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\n\r\n const Post = ({getPost,post: {post,loading},match}) => {\r\n     useEffect(() => {\r\n        getPost(match.params.id);\r\n     }, [getPost])\r\n    return loading || post === null ? <Spinner/> : \r\n    <Fragment>\r\n        <div className='ui container'>\r\n        <Link to='/posts' className='ui button teal'>Back To Posts</Link>\r\n        <PostItem post = {post} showActions = {false}/>\r\n        <CommentForm postId =  {post._id}/>\r\n        {post.comments.map(comment => (\r\n            <CommentItem key={comment._id} comment={comment} postId={post._id}/>\r\n        ))}\r\n        </div>\r\n\r\n    </Fragment>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    post:state.post\r\n})\r\n\r\nexport default connect(mapStateToProps,{getPost})(Post);\r\n"]},"metadata":{},"sourceType":"module"}