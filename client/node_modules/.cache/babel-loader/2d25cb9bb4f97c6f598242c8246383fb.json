{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\Git\\\\Developer-Connector\\\\client\\\\src\\\\component\\\\profile\\\\ProfileGithub.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../action/profileAction';\nimport { Header } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos(username)]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Github Repos\"), repos === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : repos.map(repo => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: repo.html_url,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, repo.name)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, repo.description), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Stars:\", repo.stargazers_count), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Wat:\", repo.stargazers_count), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Stars:\", repo.stargazers_count))))));\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/client/src/component/profile/ProfileGithub.js"],"names":["React","useEffect","connect","Spinner","getGithubRepos","Header","Link","ProfileGithub","username","repos","map","repo","html_url","name","description","stargazers_count","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,cAAR,QAA6B,4BAA7B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEC,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUJ,EAAAA,cAAV;AAAyBK,EAAAA;AAAzB,CAAD,KAAqC;AAExDR,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,cAAc,CAACI,QAAD,CAAd;AAEH,GAHQ,EAGN,CAACJ,cAAc,CAACI,QAAD,CAAf,CAHM,CAAT;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKC,KAAK,KAAK,IAAV,GAAiB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,GACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA,IAAI,CAACC,QAAf;AAAyB,IAAA,MAAM,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CD,IAAI,CAACE,IAA/C,CADJ,CADA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,IAAI,CAACG,WAAT,CAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWH,IAAI,CAACI,gBAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASJ,IAAI,CAACI,gBAAd,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWJ,IAAI,CAACI,gBAAhB,CAHJ,CADJ,CALA,CADJ,CAHR,CADJ;AAsBH,CA5BA;;AA8BD,MAAMC,eAAe,GAAGC,KAAK,KAAI;AAC7BR,EAAAA,KAAK,EAAGQ,KAAK,CAACC,OAAN,CAAcT;AADO,CAAJ,CAA7B;;AAIA,eAAeP,OAAO,CAACc,eAAD,EAAiB;AAACZ,EAAAA;AAAD,CAAjB,CAAP,CAA0CG,aAA1C,CAAf","sourcesContent":["import React,{useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport {getGithubRepos} from '../../action/profileAction';\r\nimport { Header } from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n const ProfileGithub = ({username,getGithubRepos,repos}) => {\r\n\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n        \r\n    }, [getGithubRepos(username)])\r\n    return (\r\n        <div>\r\n            <Header>Github Repos</Header>\r\n            {repos === null ? <Spinner/> : (\r\n                repos.map(repo => (\r\n                    <div>\r\n                    <Header as='h4'>\r\n                        <Link to={repo.html_url} target='_blank'>{repo.name}</Link>\r\n                    </Header>\r\n                    <p>{repo.description}</p>\r\n                    <div>\r\n                        <ul>\r\n                            <li>Stars:{repo.stargazers_count}</li>\r\n                            <li>Wat:{repo.stargazers_count}</li>\r\n                            <li>Stars:{repo.stargazers_count}</li>\r\n                        </ul>\r\n                    </div>\r\n                 </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    repos : state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps,{getGithubRepos})(ProfileGithub);\r\n"]},"metadata":{},"sourceType":"module"}