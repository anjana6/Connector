{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\Git\\\\Developer-Connector\\\\client\\\\src\\\\component\\\\posts\\\\PostItem.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { Header, Image, Button, Icon, CommentActions } from 'semantic-ui-react';\nimport { addLikes, removeLikes, deletePost } from '../../action/PostAction';\n\nconst PostItem = ({\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comment,\n    date\n  },\n  auth,\n  addLikes,\n  removeLikes,\n  deletePost\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"profile.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, text), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Posted on \", React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, date)), React.createElement(Button, {\n    color: \"teal\",\n    onClick: e => addLikes(_id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"thumbs up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), likes.length > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, likes.length)), React.createElement(Button, {\n    color: \"teal\",\n    onClick: e => removeLikes(_id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"thumbs down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, likes.length)), React.createElement(Link, {\n    to: `/post/${_id}`,\n    className: \"ui button red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Discussion \", comment.length > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, CommentActions.length), \" \"), !auth.loading && user === auth.user._id && React.createElement(Button, {\n    color: \"teal\",\n    onClick: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLikes,\n  removeLikes,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/client/src/component/posts/PostItem.js"],"names":["React","Link","Moment","connect","Header","Image","Button","Icon","CommentActions","addLikes","removeLikes","deletePost","PostItem","post","_id","text","name","avatar","user","likes","comment","date","auth","e","length","loading","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport {connect} from 'react-redux';\r\nimport {Header,Image, Button,Icon, CommentActions} from 'semantic-ui-react';\r\nimport {addLikes,removeLikes,deletePost} from '../../action/PostAction';\r\n\r\nconst PostItem = ({post:{_id,text,name,avatar,user,likes,comment,date},auth,addLikes,removeLikes,deletePost}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to='profile.html'><Image src={avatar}/><Header>{name}</Header></Link>\r\n            </div>\r\n            <div>\r\n                <p>{text}</p>\r\n                <p>Posted on <Moment format='YYYY/MM/DD'>{date}</Moment></p>\r\n                <Button color='teal' onClick={(e) => addLikes(_id)}><Icon name='thumbs up'/>{likes.length>0 && (<span>{likes.length}</span>)}</Button>\r\n                <Button color='teal' onClick={e => removeLikes(_id)}><Icon name='thumbs down'/><span>{likes.length}</span></Button>\r\n                <Link to={`/post/${_id}`} className='ui button red'>Discussion {comment.length>0 && (<span>{CommentActions.length}</span>)} </Link>\r\n                {!auth.loading && user === auth.user._id && (\r\n                    <Button color='teal' onClick><Icon name='time'/></Button>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\nconst mapStateToProps = state =>({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,{addLikes,removeLikes,deletePost})(PostItem);\r\n"]},"metadata":{},"sourceType":"module"}