{"ast":null,"code":"'use strict';\n/**\n * For consistency's sake, we replace positional operator `$` and array filters\n * `$[]` and `$[foo]` with `0` when looking up schema paths.\n */\n\nmodule.exports = function cleanPositionalOperators(path) {\n  return path.replace(/\\.\\$(\\[[^\\]]*\\])?\\./g, '.0.').replace(/\\.(\\[[^\\]]*\\])?\\$$/g, '.0');\n};","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/node_modules/mongoose/lib/helpers/schema/cleanPositionalOperators.js"],"names":["module","exports","cleanPositionalOperators","path","replace"],"mappings":"AAAA;AAEA;;;;;AAKAA,MAAM,CAACC,OAAP,GAAiB,SAASC,wBAAT,CAAkCC,IAAlC,EAAwC;AACvD,SAAOA,IAAI,CACTC,OADK,CACG,sBADH,EAC2B,KAD3B,EAELA,OAFK,CAEG,qBAFH,EAE0B,IAF1B,CAAP;AAGD,CAJD","sourcesContent":["'use strict';\n\n/**\n * For consistency's sake, we replace positional operator `$` and array filters\n * `$[]` and `$[foo]` with `0` when looking up schema paths.\n */\n\nmodule.exports = function cleanPositionalOperators(path) {\n  return path.\n    replace(/\\.\\$(\\[[^\\]]*\\])?\\./g, '.0.').\n    replace(/\\.(\\[[^\\]]*\\])?\\$$/g, '.0');\n};"]},"metadata":{},"sourceType":"script"}