{"ast":null,"code":"'use strict';\n/*!\n * Module dependencies.\n */\n\nconst MongooseError = require('./');\n/**\n * Version Error constructor.\n *\n * @inherits MongooseError\n * @api private\n */\n\n\nfunction VersionError(doc, currentVersion, modifiedPaths) {\n  const modifiedPathsStr = modifiedPaths.join(', ');\n  MongooseError.call(this, 'No matching document found for id \"' + doc._id + '\" version ' + currentVersion + ' modifiedPaths \"' + modifiedPathsStr + '\"');\n  this.name = 'VersionError';\n  this.version = currentVersion;\n  this.modifiedPaths = modifiedPaths;\n}\n/*!\n * Inherits from MongooseError.\n */\n\n\nVersionError.prototype = Object.create(MongooseError.prototype);\nVersionError.prototype.constructor = MongooseError;\n/*!\n * exports\n */\n\nmodule.exports = VersionError;","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/node_modules/mongoose/lib/error/version.js"],"names":["MongooseError","require","VersionError","doc","currentVersion","modifiedPaths","modifiedPathsStr","join","call","_id","name","version","prototype","Object","create","constructor","module","exports"],"mappings":"AAAA;AAEA;;;;AAIA,MAAMA,aAAa,GAAGC,OAAO,CAAC,IAAD,CAA7B;AAEA;;;;;;;;AAOA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,cAA3B,EAA2CC,aAA3C,EAA0D;AACxD,QAAMC,gBAAgB,GAAGD,aAAa,CAACE,IAAd,CAAmB,IAAnB,CAAzB;AACAP,EAAAA,aAAa,CAACQ,IAAd,CAAmB,IAAnB,EAAyB,wCAAwCL,GAAG,CAACM,GAA5C,GACvB,YADuB,GACRL,cADQ,GACS,kBADT,GAC8BE,gBAD9B,GACiD,GAD1E;AAEA,OAAKI,IAAL,GAAY,cAAZ;AACA,OAAKC,OAAL,GAAeP,cAAf;AACA,OAAKC,aAAL,GAAqBA,aAArB;AACD;AAED;;;;;AAIAH,YAAY,CAACU,SAAb,GAAyBC,MAAM,CAACC,MAAP,CAAcd,aAAa,CAACY,SAA5B,CAAzB;AACAV,YAAY,CAACU,SAAb,CAAuBG,WAAvB,GAAqCf,aAArC;AAEA;;;;AAIAgB,MAAM,CAACC,OAAP,GAAiBf,YAAjB","sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst MongooseError = require('./');\n\n/**\n * Version Error constructor.\n *\n * @inherits MongooseError\n * @api private\n */\n\nfunction VersionError(doc, currentVersion, modifiedPaths) {\n  const modifiedPathsStr = modifiedPaths.join(', ');\n  MongooseError.call(this, 'No matching document found for id \"' + doc._id +\n    '\" version ' + currentVersion + ' modifiedPaths \"' + modifiedPathsStr + '\"');\n  this.name = 'VersionError';\n  this.version = currentVersion;\n  this.modifiedPaths = modifiedPaths;\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nVersionError.prototype = Object.create(MongooseError.prototype);\nVersionError.prototype.constructor = MongooseError;\n\n/*!\n * exports\n */\n\nmodule.exports = VersionError;\n"]},"metadata":{},"sourceType":"script"}