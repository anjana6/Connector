{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST } from './Type';\nimport { setAlert } from './alertAction';\nimport axios from 'axios';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/post');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addLikes = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/post/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const removeLikes = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/post/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deletePost = postId => async dispatch => {\n  try {\n    await axios.delete(`/api/post/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: postId\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addPost = text => async dispatch => {\n  console.log(text);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/post', text, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getPost = () => async dispatch => {\n  try {\n    const res = await axios.get(`/api/post/${is}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/client/src/action/PostAction.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","setAlert","axios","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLikes","postId","put","likes","removeLikes","deletePost","delete","addPost","text","console","log","config","headers","post","getPost","is","GET_POST"],"mappings":"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","sourcesContent":["import {GET_POSTS,POST_ERROR, UPDATE_LIKES,DELETE_POST,ADD_POST} from './Type';\r\nimport {setAlert}  from './alertAction';\r\nimport axios from 'axios';\r\n\r\nexport const getPosts = () =>async dispatch =>{\r\n    \r\n    try {\r\n        const res = await axios.get('/api/post');\r\n\r\n        dispatch({\r\n            type:GET_POSTS,\r\n            payload:res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText, status:err.response.status}\r\n        });\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const addLikes = (postId) =>async dispatch =>{\r\n    \r\n    try {\r\n        const res = await axios.put(`/api/post/like/${postId}`);\r\n\r\n        dispatch({\r\n            type:UPDATE_LIKES,\r\n            payload:{postId,likes:res.data}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText, status:err.response.status}\r\n        });\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const removeLikes = (postId) =>async dispatch =>{\r\n    \r\n    try {\r\n        const res = await axios.put(`/api/post/unlike/${postId}`);\r\n\r\n        dispatch({\r\n            type:UPDATE_LIKES,\r\n            payload:{postId,likes:res.data}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText, status:err.response.status}\r\n        });\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const deletePost = (postId) =>async dispatch =>{\r\n    \r\n    try {\r\n         await axios.delete(`/api/post/${postId}`);\r\n\r\n        dispatch({\r\n            type:DELETE_POST,\r\n            payload:postId\r\n        });\r\n\r\n        dispatch(setAlert( 'Post Removed', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText, status:err.response.status}\r\n        });\r\n        \r\n    }\r\n\r\n} \r\n\r\nexport const addPost = (text) =>async dispatch =>{\r\n    console.log(text);\r\n\r\n    const config = {\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    \r\n    try {\r\n        const res = await axios.post('/api/post',text,config);\r\n\r\n        dispatch({\r\n            type:ADD_POST,\r\n            payload:res.data\r\n        });\r\n\r\n        dispatch(setAlert( 'Post Created', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText, status:err.response.status}\r\n        });\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const getPost = () =>async dispatch =>{\r\n    \r\n    try {\r\n        const res = await axios.get(`/api/post/${is}`);\r\n\r\n        dispatch({\r\n            type:GET_POST,\r\n            payload:res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText, status:err.response.status}\r\n        });\r\n        \r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}