{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\Git\\\\Developer-Connector\\\\client\\\\src\\\\component\\\\profile\\\\Profile.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getProfileById } from '../../action/profileAction';\nimport Spinner from '../layout/Spinner';\nimport { Button, Header } from 'semantic-ui-react';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from '';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  match,\n  auth\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \" \", React.createElement(Button, {\n    inverted: true,\n    color: \"teal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Back To Profile\")), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"ui teal button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(\"div\", {\n    className: \"ui container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(ProfileTop, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(ProfileAbout, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Experience\"), profile.experience.length > 0 ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, profile.experience.map(experience => React.createElement(ProfileExperience, {\n    key: experience._id,\n    experience: experience,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))) : React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"No experience credentials\")))));\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/client/src/component/profile/Profile.js"],"names":["React","useEffect","Fragment","Link","connect","getProfileById","Spinner","Button","Header","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","Profile","profile","loading","match","auth","params","id","isAuthenticated","user","_id","experience","length","map","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React,{useEffect, Fragment} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {getProfileById} from '../../action/profileAction';\r\nimport Spinner from '../layout/Spinner';\r\nimport {Button,Header} from 'semantic-ui-react';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from '';\r\n\r\nconst Profile = ({getProfileById,profile:{profile,loading},match,auth}) => {\r\n    useEffect(() => {\r\n       getProfileById(match.params.id);\r\n    }, []);\r\n    \r\n    return <Fragment>\r\n        <div className=\"ui container\">\r\n        {profile === null || loading ? <Spinner/> : \r\n            <Fragment>\r\n                <Link to='/profiles'> <Button inverted color='teal'>Back To Profile</Button></Link>\r\n                {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (<Link to='/edit-profile' className='ui teal button'>Edit Profile</Link>)}\r\n\r\n                <div className=\"ui container\">\r\n                    <ProfileTop profile={profile}/>\r\n                    <ProfileAbout profile={profile}/>\r\n\r\n                    <Header as='h2'>Experience</Header>\r\n                    {profile.experience.length >0? (\r\n                        <Fragment>\r\n                            {profile.experience.map(experience =>(\r\n                                <ProfileExperience key={experience._id} experience={experience}/>\r\n                            ))}\r\n                        </Fragment>\r\n                    ) :(<Header>No experience credentials</Header>)}\r\n                </div>\r\n            </Fragment>}\r\n            </div>\r\n    </Fragment>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile:state.profile,\r\n    auth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,{getProfileById})(Profile);\r\n"]},"metadata":{},"sourceType":"module"}