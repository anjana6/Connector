{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\Git\\\\Developer-Connector\\\\client\\\\src\\\\component\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../action/profileAction';\nimport Spinner from '../layout/Spinner';\nimport { Header, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport ActionDashboard from './ActionDashboard';\nimport Experience from './Experience';\nimport Education from './Education';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  profile: {\n    profile,\n    loading\n  },\n  auth: {\n    user\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  console.log(profile);\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    color: \"violet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \"Welcome\", user && user.name), profile !== null ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(ActionDashboard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Experience, {\n    experience: profile.experience,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Education, {\n    education: profile.education,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    fa: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), \"Delete\")) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"You have not yet setup a profile, please add some info\"), React.createElement(Link, {\n    to: \"/create-profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Button, {\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Create Frofile\")))), \">\");\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/client/src/component/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","connect","getCurrentProfile","Spinner","Header","Button","Link","ActionDashboard","Experience","Education","Dashboard","profile","loading","auth","user","console","log","name","experience","education","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,iBAAR,QAAgC,4BAAhC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,MAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACR,EAAAA,iBAAD;AAAmBS,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAASC,IAAAA;AAAT,GAA5B;AAA8CC,EAAAA,IAAI,EAAC;AAACC,IAAAA;AAAD;AAAnD,CAAD,KAAgE;AAC9Ef,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,EAFM,CAAT;AAGAa,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,SAAOC,OAAO,IAAID,OAAO,KAAK,IAAvB,GAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,GACN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,aAA0CG,IAAI,IAAIA,IAAI,CAACG,IAAvD,CAFA,EAGCN,OAAO,KAAK,IAAZ,GACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEG,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEA,OAAO,CAACO,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,EAGG,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEP,OAAO,CAACQ,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,EAKG,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,EAAE,MAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,WALH,CADJ,GAQI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADH,EAEG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA3B,CAFH,CAXL,CADH,MADD;AAmBH,CAxBD;;AA0BA,MAAMC,eAAe,GAAIC,KAAD,KAAW;AAC/BR,EAAAA,IAAI,EAACQ,KAAK,CAACR,IADoB;AAE/BF,EAAAA,OAAO,EAAEU,KAAK,CAACV;AAFgB,CAAX,CAAxB;;AAKA,eAAeV,OAAO,CAACmB,eAAD,EAAiB;AAAClB,EAAAA;AAAD,CAAjB,CAAP,CAA6CQ,SAA7C,CAAf","sourcesContent":["import React,{ useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {getCurrentProfile} from '../../action/profileAction';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Header,Button } from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\nimport ActionDashboard from './ActionDashboard';\r\nimport Experience from './Experience';\r\nimport Education from './Education'\r\n\r\nconst Dashboard = ({getCurrentProfile,profile :{profile,loading},auth:{user}}) => {\r\n    useEffect(() => {\r\n        getCurrentProfile()\r\n    }, []);\r\n    console.log(profile);\r\n    return loading && profile === null? (<Spinner/>) : \r\n    (<Fragment>\r\n        <div className=\"ui container\">\r\n        <Header as='h1' color='violet'>Dashboard</Header>\r\n        <p><i className=\"fa fa-user\"></i>Welcome{ user && user.name }</p>\r\n        {profile !== null?\r\n            (<Fragment>\r\n                <ActionDashboard/>\r\n                <Experience experience={profile.experience}/>\r\n                <Education education={profile.education}/>\r\n\r\n                <Button color='red'><i fa></i>Delete</Button>\r\n            </Fragment>):\r\n            (<Fragment>\r\n                <p>You have not yet setup a profile, please add some info</p>\r\n                <Link to='/create-profile'><Button primary>Create Frofile</Button></Link>\r\n            </Fragment>)}\r\n        </div>>\r\n    </Fragment>);\r\n}\r\n \r\nconst mapStateToProps = (state) =>({\r\n    auth:state.auth,\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps,{getCurrentProfile})(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}