{"ast":null,"code":"/*!\n * Module dependencies.\n */\n'use strict';\n\nconst MongooseError = require('./');\n/**\n * Schema validator error\n *\n * @param {Object} properties\n * @inherits MongooseError\n * @api private\n */\n\n\nfunction ValidatorError(properties) {\n  let msg = properties.message;\n\n  if (!msg) {\n    msg = MongooseError.messages.general.default;\n  }\n\n  const message = this.formatMessage(msg, properties);\n  MongooseError.call(this, message);\n  properties = Object.assign({}, properties, {\n    message: message\n  });\n  this.name = 'ValidatorError';\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n\n  this.properties = properties;\n  this.kind = properties.type;\n  this.path = properties.path;\n  this.value = properties.value;\n  this.reason = properties.reason;\n}\n/*!\n * Inherits from MongooseError\n */\n\n\nValidatorError.prototype = Object.create(MongooseError.prototype);\nValidatorError.prototype.constructor = MongooseError;\n/*!\n * The object used to define this validator. Not enumerable to hide\n * it from `require('util').inspect()` output re: gh-3925\n */\n\nObject.defineProperty(ValidatorError.prototype, 'properties', {\n  enumerable: false,\n  writable: true,\n  value: null\n});\n/*!\n * Formats error messages\n */\n\nValidatorError.prototype.formatMessage = function (msg, properties) {\n  if (typeof msg === 'function') {\n    return msg(properties);\n  }\n\n  const propertyNames = Object.keys(properties);\n\n  for (let i = 0; i < propertyNames.length; ++i) {\n    const propertyName = propertyNames[i];\n\n    if (propertyName === 'message') {\n      continue;\n    }\n\n    msg = msg.replace('{' + propertyName.toUpperCase() + '}', properties[propertyName]);\n  }\n\n  return msg;\n};\n/*!\n * toString helper\n */\n\n\nValidatorError.prototype.toString = function () {\n  return this.message;\n};\n/*!\n * exports\n */\n\n\nmodule.exports = ValidatorError;","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/node_modules/mongoose/lib/error/validator.js"],"names":["MongooseError","require","ValidatorError","properties","msg","message","messages","general","default","formatMessage","call","Object","assign","name","Error","captureStackTrace","stack","kind","type","path","value","reason","prototype","create","constructor","defineProperty","enumerable","writable","propertyNames","keys","i","length","propertyName","replace","toUpperCase","toString","module","exports"],"mappings":"AAAA;;;AAIA;;AAEA,MAAMA,aAAa,GAAGC,OAAO,CAAC,IAAD,CAA7B;AAEA;;;;;;;;;AAQA,SAASC,cAAT,CAAwBC,UAAxB,EAAoC;AAClC,MAAIC,GAAG,GAAGD,UAAU,CAACE,OAArB;;AACA,MAAI,CAACD,GAAL,EAAU;AACRA,IAAAA,GAAG,GAAGJ,aAAa,CAACM,QAAd,CAAuBC,OAAvB,CAA+BC,OAArC;AACD;;AAED,QAAMH,OAAO,GAAG,KAAKI,aAAL,CAAmBL,GAAnB,EAAwBD,UAAxB,CAAhB;AACAH,EAAAA,aAAa,CAACU,IAAd,CAAmB,IAAnB,EAAyBL,OAAzB;AAEAF,EAAAA,UAAU,GAAGQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,UAAlB,EAA8B;AAAEE,IAAAA,OAAO,EAAEA;AAAX,GAA9B,CAAb;AACA,OAAKQ,IAAL,GAAY,gBAAZ;;AACA,MAAIC,KAAK,CAACC,iBAAV,EAA6B;AAC3BD,IAAAA,KAAK,CAACC,iBAAN,CAAwB,IAAxB;AACD,GAFD,MAEO;AACL,SAAKC,KAAL,GAAa,IAAIF,KAAJ,GAAYE,KAAzB;AACD;;AACD,OAAKb,UAAL,GAAkBA,UAAlB;AACA,OAAKc,IAAL,GAAYd,UAAU,CAACe,IAAvB;AACA,OAAKC,IAAL,GAAYhB,UAAU,CAACgB,IAAvB;AACA,OAAKC,KAAL,GAAajB,UAAU,CAACiB,KAAxB;AACA,OAAKC,MAAL,GAAclB,UAAU,CAACkB,MAAzB;AACD;AAED;;;;;AAIAnB,cAAc,CAACoB,SAAf,GAA2BX,MAAM,CAACY,MAAP,CAAcvB,aAAa,CAACsB,SAA5B,CAA3B;AACApB,cAAc,CAACoB,SAAf,CAAyBE,WAAzB,GAAuCxB,aAAvC;AAEA;;;;;AAKAW,MAAM,CAACc,cAAP,CAAsBvB,cAAc,CAACoB,SAArC,EAAgD,YAAhD,EAA8D;AAC5DI,EAAAA,UAAU,EAAE,KADgD;AAE5DC,EAAAA,QAAQ,EAAE,IAFkD;AAG5DP,EAAAA,KAAK,EAAE;AAHqD,CAA9D;AAMA;;;;AAIAlB,cAAc,CAACoB,SAAf,CAAyBb,aAAzB,GAAyC,UAASL,GAAT,EAAcD,UAAd,EAA0B;AACjE,MAAI,OAAOC,GAAP,KAAe,UAAnB,EAA+B;AAC7B,WAAOA,GAAG,CAACD,UAAD,CAAV;AACD;;AACD,QAAMyB,aAAa,GAAGjB,MAAM,CAACkB,IAAP,CAAY1B,UAAZ,CAAtB;;AACA,OAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,aAAa,CAACG,MAAlC,EAA0C,EAAED,CAA5C,EAA+C;AAC7C,UAAME,YAAY,GAAGJ,aAAa,CAACE,CAAD,CAAlC;;AACA,QAAIE,YAAY,KAAK,SAArB,EAAgC;AAC9B;AACD;;AACD5B,IAAAA,GAAG,GAAGA,GAAG,CAAC6B,OAAJ,CAAY,MAAMD,YAAY,CAACE,WAAb,EAAN,GAAmC,GAA/C,EAAoD/B,UAAU,CAAC6B,YAAD,CAA9D,CAAN;AACD;;AACD,SAAO5B,GAAP;AACD,CAbD;AAeA;;;;;AAIAF,cAAc,CAACoB,SAAf,CAAyBa,QAAzB,GAAoC,YAAW;AAC7C,SAAO,KAAK9B,OAAZ;AACD,CAFD;AAIA;;;;;AAIA+B,MAAM,CAACC,OAAP,GAAiBnC,cAAjB","sourcesContent":["/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\n/**\n * Schema validator error\n *\n * @param {Object} properties\n * @inherits MongooseError\n * @api private\n */\n\nfunction ValidatorError(properties) {\n  let msg = properties.message;\n  if (!msg) {\n    msg = MongooseError.messages.general.default;\n  }\n\n  const message = this.formatMessage(msg, properties);\n  MongooseError.call(this, message);\n\n  properties = Object.assign({}, properties, { message: message });\n  this.name = 'ValidatorError';\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.properties = properties;\n  this.kind = properties.type;\n  this.path = properties.path;\n  this.value = properties.value;\n  this.reason = properties.reason;\n}\n\n/*!\n * Inherits from MongooseError\n */\n\nValidatorError.prototype = Object.create(MongooseError.prototype);\nValidatorError.prototype.constructor = MongooseError;\n\n/*!\n * The object used to define this validator. Not enumerable to hide\n * it from `require('util').inspect()` output re: gh-3925\n */\n\nObject.defineProperty(ValidatorError.prototype, 'properties', {\n  enumerable: false,\n  writable: true,\n  value: null\n});\n\n/*!\n * Formats error messages\n */\n\nValidatorError.prototype.formatMessage = function(msg, properties) {\n  if (typeof msg === 'function') {\n    return msg(properties);\n  }\n  const propertyNames = Object.keys(properties);\n  for (let i = 0; i < propertyNames.length; ++i) {\n    const propertyName = propertyNames[i];\n    if (propertyName === 'message') {\n      continue;\n    }\n    msg = msg.replace('{' + propertyName.toUpperCase() + '}', properties[propertyName]);\n  }\n  return msg;\n};\n\n/*!\n * toString helper\n */\n\nValidatorError.prototype.toString = function() {\n  return this.message;\n};\n\n/*!\n * exports\n */\n\nmodule.exports = ValidatorError;\n"]},"metadata":{},"sourceType":"script"}