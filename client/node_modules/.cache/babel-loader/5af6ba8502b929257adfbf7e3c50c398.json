{"ast":null,"code":"'use strict';\n\nconst Document = require('../document');\n\nconst immediate = require('../helpers/immediate');\n\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\n\nconst utils = require('../utils');\n\nconst documentArrayParent = require('../helpers/symbols').documentArrayParent;\n\nmodule.exports = Subdocument;\n/**\n * Subdocument constructor.\n *\n * @inherits Document\n * @api private\n */\n\nfunction Subdocument(value, fields, parent, skipId, options) {\n  this.$isSingleNested = true;\n  const hasPriorDoc = options != null && options.priorDoc;\n  let initedPaths = null;\n\n  if (hasPriorDoc) {\n    this._doc = Object.assign({}, options.priorDoc._doc);\n    delete this._doc[this.schema.options.discriminatorKey];\n    initedPaths = Object.keys(options.priorDoc._doc || {}).filter(key => key !== this.schema.options.discriminatorKey);\n  }\n\n  if (parent != null) {\n    // If setting a nested path, should copy isNew from parent re: gh-7048\n    options = Object.assign({}, options, {\n      isNew: parent.isNew\n    });\n  }\n\n  Document.call(this, value, fields, skipId, options);\n\n  if (hasPriorDoc) {\n    for (const key of initedPaths) {\n      if (!this.$__.activePaths.states.modify[key] && !this.$__.activePaths.states.default[key] && !this.$__.$setCalled.has(key)) {\n        delete this._doc[key];\n      }\n    }\n  }\n}\n\nSubdocument.prototype = Object.create(Document.prototype);\n\nSubdocument.prototype.toBSON = function () {\n  return this.toObject(internalToObjectOptions);\n};\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @return {Promise} resolved Promise\n * @api private\n */\n\n\nSubdocument.prototype.save = function (options, fn) {\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  if (!options.suppressWarning) {\n    console.warn('mongoose: calling `save()` on a subdoc does **not** save ' + 'the document to MongoDB, it only runs save middleware. ' + 'Use `subdoc.save({ suppressWarning: true })` to hide this warning ' + 'if you\\'re sure this behavior is right for your app.');\n  }\n\n  return utils.promiseOrCallback(fn, cb => {\n    this.$__save(cb);\n  });\n};\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @method $__save\n * @api private\n */\n\n\nSubdocument.prototype.$__save = function (fn) {\n  return immediate(() => fn(null, this));\n};\n\nSubdocument.prototype.$isValid = function (path) {\n  if (this.$parent && this.$basePath) {\n    return this.$parent.$isValid([this.$basePath, path].join('.'));\n  }\n\n  return Document.prototype.$isValid.call(this, path);\n};\n\nSubdocument.prototype.markModified = function (path) {\n  Document.prototype.markModified.call(this, path);\n\n  if (this.$parent && this.$basePath) {\n    if (this.$parent.isDirectModified(this.$basePath)) {\n      return;\n    }\n\n    this.$parent.markModified([this.$basePath, path].join('.'), this);\n  }\n};\n\nSubdocument.prototype.isModified = function (paths, modifiedPaths) {\n  if (this.$parent && this.$basePath) {\n    if (Array.isArray(paths) || typeof paths === 'string') {\n      paths = Array.isArray(paths) ? paths : paths.split(' ');\n      paths = paths.map(p => [this.$basePath, p].join('.'));\n    }\n\n    return this.$parent.isModified(paths, modifiedPaths);\n  }\n\n  return Document.prototype.isModified(paths, modifiedPaths);\n};\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api private\n * @method $markValid\n * @receiver Subdocument\n */\n\n\nSubdocument.prototype.$markValid = function (path) {\n  Document.prototype.$markValid.call(this, path);\n\n  if (this.$parent && this.$basePath) {\n    this.$parent.$markValid([this.$basePath, path].join('.'));\n  }\n};\n/*!\n * ignore\n */\n\n\nSubdocument.prototype.invalidate = function (path, err, val) {\n  // Hack: array subdocuments' validationError is equal to the owner doc's,\n  // so validating an array subdoc gives the top-level doc back. Temporary\n  // workaround for #5208 so we don't have circular errors.\n  if (err !== this.ownerDocument().$__.validationError) {\n    Document.prototype.invalidate.call(this, path, err, val);\n  }\n\n  if (this.$parent && this.$basePath) {\n    this.$parent.invalidate([this.$basePath, path].join('.'), err, val);\n  } else if (err.kind === 'cast' || err.name === 'CastError') {\n    throw err;\n  }\n};\n/*!\n * ignore\n */\n\n\nSubdocument.prototype.$ignore = function (path) {\n  Document.prototype.$ignore.call(this, path);\n\n  if (this.$parent && this.$basePath) {\n    this.$parent.$ignore([this.$basePath, path].join('.'));\n  }\n};\n/**\n * Returns the top level document of this sub-document.\n *\n * @return {Document}\n */\n\n\nSubdocument.prototype.ownerDocument = function () {\n  if (this.$__.ownerDocument) {\n    return this.$__.ownerDocument;\n  }\n\n  let parent = this.$parent;\n\n  if (!parent) {\n    return this;\n  }\n\n  while (parent.$parent || parent[documentArrayParent]) {\n    parent = parent.$parent || parent[documentArrayParent];\n  }\n\n  this.$__.ownerDocument = parent;\n  return this.$__.ownerDocument;\n};\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\n\nSubdocument.prototype.parent = function () {\n  return this.$parent;\n};\n/*!\n * no-op for hooks\n */\n\n\nSubdocument.prototype.$__remove = function (cb) {\n  return cb(null, this);\n};\n/**\n * Null-out this subdoc\n *\n * @param {Object} [options]\n * @param {Function} [callback] optional callback for compatibility with Document.prototype.remove\n */\n\n\nSubdocument.prototype.remove = function (options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n\n  registerRemoveListener(this); // If removing entire doc, no need to remove subdoc\n\n  if (!options || !options.noop) {\n    this.$parent.set(this.$basePath, null);\n  }\n\n  if (typeof callback === 'function') {\n    callback(null);\n  }\n};\n/*!\n * ignore\n */\n\n\nSubdocument.prototype.populate = function () {\n  throw new Error('Mongoose does not support calling populate() on nested ' + 'docs. Instead of `doc.nested.populate(\"path\")`, use ' + '`doc.populate(\"nested.path\")`');\n};\n/*!\n * Registers remove event listeners for triggering\n * on subdocuments.\n *\n * @param {Subdocument} sub\n * @api private\n */\n\n\nfunction registerRemoveListener(sub) {\n  let owner = sub.ownerDocument();\n\n  function emitRemove() {\n    owner.removeListener('save', emitRemove);\n    owner.removeListener('remove', emitRemove);\n    sub.emit('remove', sub);\n    sub.constructor.emit('remove', sub);\n    owner = sub = null;\n  }\n\n  owner.on('save', emitRemove);\n  owner.on('remove', emitRemove);\n}","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/node_modules/mongoose/lib/types/subdocument.js"],"names":["Document","require","immediate","internalToObjectOptions","utils","documentArrayParent","module","exports","Subdocument","value","fields","parent","skipId","options","$isSingleNested","hasPriorDoc","priorDoc","initedPaths","_doc","Object","assign","schema","discriminatorKey","keys","filter","key","isNew","call","$__","activePaths","states","modify","default","$setCalled","has","prototype","create","toBSON","toObject","save","fn","suppressWarning","console","warn","promiseOrCallback","cb","$__save","$isValid","path","$parent","$basePath","join","markModified","isDirectModified","isModified","paths","modifiedPaths","Array","isArray","split","map","p","$markValid","invalidate","err","val","ownerDocument","validationError","kind","name","$ignore","$__remove","remove","callback","registerRemoveListener","noop","set","populate","Error","sub","owner","emitRemove","removeListener","emit","constructor","on"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Document = require('../document');\nconst immediate = require('../helpers/immediate');\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\nconst utils = require('../utils');\n\nconst documentArrayParent = require('../helpers/symbols').documentArrayParent;\n\nmodule.exports = Subdocument;\n\n/**\n * Subdocument constructor.\n *\n * @inherits Document\n * @api private\n */\n\nfunction Subdocument(value, fields, parent, skipId, options) {\n  this.$isSingleNested = true;\n\n  const hasPriorDoc = options != null && options.priorDoc;\n  let initedPaths = null;\n  if (hasPriorDoc) {\n    this._doc = Object.assign({}, options.priorDoc._doc);\n    delete this._doc[this.schema.options.discriminatorKey];\n    initedPaths = Object.keys(options.priorDoc._doc || {}).\n      filter(key => key !== this.schema.options.discriminatorKey);\n  }\n  if (parent != null) {\n    // If setting a nested path, should copy isNew from parent re: gh-7048\n    options = Object.assign({}, options, { isNew: parent.isNew });\n  }\n  Document.call(this, value, fields, skipId, options);\n\n  if (hasPriorDoc) {\n    for (const key of initedPaths) {\n      if (!this.$__.activePaths.states.modify[key] &&\n          !this.$__.activePaths.states.default[key] &&\n          !this.$__.$setCalled.has(key)) {\n        delete this._doc[key];\n      }\n    }\n  }\n}\n\nSubdocument.prototype = Object.create(Document.prototype);\n\nSubdocument.prototype.toBSON = function() {\n  return this.toObject(internalToObjectOptions);\n};\n\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @return {Promise} resolved Promise\n * @api private\n */\n\nSubdocument.prototype.save = function(options, fn) {\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n  }\n  options = options || {};\n\n  if (!options.suppressWarning) {\n    console.warn('mongoose: calling `save()` on a subdoc does **not** save ' +\n      'the document to MongoDB, it only runs save middleware. ' +\n      'Use `subdoc.save({ suppressWarning: true })` to hide this warning ' +\n      'if you\\'re sure this behavior is right for your app.');\n  }\n\n  return utils.promiseOrCallback(fn, cb => {\n    this.$__save(cb);\n  });\n};\n\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @method $__save\n * @api private\n */\n\nSubdocument.prototype.$__save = function(fn) {\n  return immediate(() => fn(null, this));\n};\n\nSubdocument.prototype.$isValid = function(path) {\n  if (this.$parent && this.$basePath) {\n    return this.$parent.$isValid([this.$basePath, path].join('.'));\n  }\n  return Document.prototype.$isValid.call(this, path);\n};\n\nSubdocument.prototype.markModified = function(path) {\n  Document.prototype.markModified.call(this, path);\n\n  if (this.$parent && this.$basePath) {\n    if (this.$parent.isDirectModified(this.$basePath)) {\n      return;\n    }\n    this.$parent.markModified([this.$basePath, path].join('.'), this);\n  }\n};\n\nSubdocument.prototype.isModified = function(paths, modifiedPaths) {\n  if (this.$parent && this.$basePath) {\n    if (Array.isArray(paths) || typeof paths === 'string') {\n      paths = (Array.isArray(paths) ? paths : paths.split(' '));\n      paths = paths.map(p => [this.$basePath, p].join('.'));\n    }\n\n    return this.$parent.isModified(paths, modifiedPaths);\n  }\n\n  return Document.prototype.isModified(paths, modifiedPaths);\n};\n\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api private\n * @method $markValid\n * @receiver Subdocument\n */\n\nSubdocument.prototype.$markValid = function(path) {\n  Document.prototype.$markValid.call(this, path);\n  if (this.$parent && this.$basePath) {\n    this.$parent.$markValid([this.$basePath, path].join('.'));\n  }\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.invalidate = function(path, err, val) {\n  // Hack: array subdocuments' validationError is equal to the owner doc's,\n  // so validating an array subdoc gives the top-level doc back. Temporary\n  // workaround for #5208 so we don't have circular errors.\n  if (err !== this.ownerDocument().$__.validationError) {\n    Document.prototype.invalidate.call(this, path, err, val);\n  }\n\n  if (this.$parent && this.$basePath) {\n    this.$parent.invalidate([this.$basePath, path].join('.'), err, val);\n  } else if (err.kind === 'cast' || err.name === 'CastError') {\n    throw err;\n  }\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.$ignore = function(path) {\n  Document.prototype.$ignore.call(this, path);\n  if (this.$parent && this.$basePath) {\n    this.$parent.$ignore([this.$basePath, path].join('.'));\n  }\n};\n\n/**\n * Returns the top level document of this sub-document.\n *\n * @return {Document}\n */\n\nSubdocument.prototype.ownerDocument = function() {\n  if (this.$__.ownerDocument) {\n    return this.$__.ownerDocument;\n  }\n\n  let parent = this.$parent;\n  if (!parent) {\n    return this;\n  }\n\n  while (parent.$parent || parent[documentArrayParent]) {\n    parent = parent.$parent || parent[documentArrayParent];\n  }\n\n  this.$__.ownerDocument = parent;\n  return this.$__.ownerDocument;\n};\n\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\nSubdocument.prototype.parent = function() {\n  return this.$parent;\n};\n\n/*!\n * no-op for hooks\n */\n\nSubdocument.prototype.$__remove = function(cb) {\n  return cb(null, this);\n};\n\n/**\n * Null-out this subdoc\n *\n * @param {Object} [options]\n * @param {Function} [callback] optional callback for compatibility with Document.prototype.remove\n */\n\nSubdocument.prototype.remove = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n\n  registerRemoveListener(this);\n\n  // If removing entire doc, no need to remove subdoc\n  if (!options || !options.noop) {\n    this.$parent.set(this.$basePath, null);\n  }\n\n  if (typeof callback === 'function') {\n    callback(null);\n  }\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.populate = function() {\n  throw new Error('Mongoose does not support calling populate() on nested ' +\n    'docs. Instead of `doc.nested.populate(\"path\")`, use ' +\n    '`doc.populate(\"nested.path\")`');\n};\n\n/*!\n * Registers remove event listeners for triggering\n * on subdocuments.\n *\n * @param {Subdocument} sub\n * @api private\n */\n\nfunction registerRemoveListener(sub) {\n  let owner = sub.ownerDocument();\n\n  function emitRemove() {\n    owner.removeListener('save', emitRemove);\n    owner.removeListener('remove', emitRemove);\n    sub.emit('remove', sub);\n    sub.constructor.emit('remove', sub);\n    owner = sub = null;\n  }\n\n  owner.on('save', emitRemove);\n  owner.on('remove', emitRemove);\n}\n"]},"metadata":{},"sourceType":"script"}