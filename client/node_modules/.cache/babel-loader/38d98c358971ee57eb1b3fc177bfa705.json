{"ast":null,"code":"/*!\n * Module dependencies.\n */\n'use strict';\n\nconst MongooseError = require('./');\n/**\n * Strict mode error constructor\n *\n * @param {String} type\n * @param {String} value\n * @inherits MongooseError\n * @api private\n */\n\n\nfunction StrictModeError(path, msg, immutable) {\n  msg = msg || 'Field `' + path + '` is not in schema and strict ' + 'mode is set to throw.';\n  MongooseError.call(this, msg);\n  this.name = 'StrictModeError';\n  this.isImmutableError = !!immutable;\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n\n  this.path = path;\n}\n/*!\n * Inherits from MongooseError.\n */\n\n\nStrictModeError.prototype = Object.create(MongooseError.prototype);\nStrictModeError.prototype.constructor = MongooseError;\nmodule.exports = StrictModeError;","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/node_modules/mongoose/lib/error/strict.js"],"names":["MongooseError","require","StrictModeError","path","msg","immutable","call","name","isImmutableError","Error","captureStackTrace","stack","prototype","Object","create","constructor","module","exports"],"mappings":"AAAA;;;AAIA;;AAEA,MAAMA,aAAa,GAAGC,OAAO,CAAC,IAAD,CAA7B;AAEA;;;;;;;;;;AASA,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,GAA/B,EAAoCC,SAApC,EAA+C;AAC7CD,EAAAA,GAAG,GAAGA,GAAG,IAAI,YAAYD,IAAZ,GAAmB,gCAAnB,GACX,uBADF;AAEAH,EAAAA,aAAa,CAACM,IAAd,CAAmB,IAAnB,EAAyBF,GAAzB;AACA,OAAKG,IAAL,GAAY,iBAAZ;AACA,OAAKC,gBAAL,GAAwB,CAAC,CAACH,SAA1B;;AACA,MAAII,KAAK,CAACC,iBAAV,EAA6B;AAC3BD,IAAAA,KAAK,CAACC,iBAAN,CAAwB,IAAxB;AACD,GAFD,MAEO;AACL,SAAKC,KAAL,GAAa,IAAIF,KAAJ,GAAYE,KAAzB;AACD;;AACD,OAAKR,IAAL,GAAYA,IAAZ;AACD;AAED;;;;;AAIAD,eAAe,CAACU,SAAhB,GAA4BC,MAAM,CAACC,MAAP,CAAcd,aAAa,CAACY,SAA5B,CAA5B;AACAV,eAAe,CAACU,SAAhB,CAA0BG,WAA1B,GAAwCf,aAAxC;AAEAgB,MAAM,CAACC,OAAP,GAAiBf,eAAjB","sourcesContent":["/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\n/**\n * Strict mode error constructor\n *\n * @param {String} type\n * @param {String} value\n * @inherits MongooseError\n * @api private\n */\n\nfunction StrictModeError(path, msg, immutable) {\n  msg = msg || 'Field `' + path + '` is not in schema and strict ' +\n    'mode is set to throw.';\n  MongooseError.call(this, msg);\n  this.name = 'StrictModeError';\n  this.isImmutableError = !!immutable;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.path = path;\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nStrictModeError.prototype = Object.create(MongooseError.prototype);\nStrictModeError.prototype.constructor = MongooseError;\n\nmodule.exports = StrictModeError;\n"]},"metadata":{},"sourceType":"script"}