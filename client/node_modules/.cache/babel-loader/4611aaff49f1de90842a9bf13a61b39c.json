{"ast":null,"code":"/*!\n * Module dependencies.\n */\n'use strict';\n\nconst MongooseError = require('./');\n/**\n * Strict mode error constructor\n *\n * @param {String} type\n * @param {String} value\n * @inherits MongooseError\n * @api private\n */\n\n\nfunction ObjectExpectedError(path, val) {\n  const typeDescription = Array.isArray(val) ? 'array' : 'primitive value';\n  MongooseError.call(this, 'Tried to set nested object field `' + path + `\\` to ${typeDescription} \\`` + val + '` and strict mode is set to throw.');\n  this.name = 'ObjectExpectedError';\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n\n  this.path = path;\n}\n/*!\n * Inherits from MongooseError.\n */\n\n\nObjectExpectedError.prototype = Object.create(MongooseError.prototype);\nObjectExpectedError.prototype.constructor = MongooseError;\nmodule.exports = ObjectExpectedError;","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/node_modules/mongoose/lib/error/objectExpected.js"],"names":["MongooseError","require","ObjectExpectedError","path","val","typeDescription","Array","isArray","call","name","Error","captureStackTrace","stack","prototype","Object","create","constructor","module","exports"],"mappings":"AAAA;;;AAIA;;AAEA,MAAMA,aAAa,GAAGC,OAAO,CAAC,IAAD,CAA7B;AAEA;;;;;;;;;;AASA,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,GAAnC,EAAwC;AACtC,QAAMC,eAAe,GAAGC,KAAK,CAACC,OAAN,CAAcH,GAAd,IAAqB,OAArB,GAA+B,iBAAvD;AACAJ,EAAAA,aAAa,CAACQ,IAAd,CAAmB,IAAnB,EAAyB,uCAAuCL,IAAvC,GACtB,SAAQE,eAAgB,KADF,GACSD,GADT,GACe,oCADxC;AAEA,OAAKK,IAAL,GAAY,qBAAZ;;AACA,MAAIC,KAAK,CAACC,iBAAV,EAA6B;AAC3BD,IAAAA,KAAK,CAACC,iBAAN,CAAwB,IAAxB;AACD,GAFD,MAEO;AACL,SAAKC,KAAL,GAAa,IAAIF,KAAJ,GAAYE,KAAzB;AACD;;AACD,OAAKT,IAAL,GAAYA,IAAZ;AACD;AAED;;;;;AAIAD,mBAAmB,CAACW,SAApB,GAAgCC,MAAM,CAACC,MAAP,CAAcf,aAAa,CAACa,SAA5B,CAAhC;AACAX,mBAAmB,CAACW,SAApB,CAA8BG,WAA9B,GAA4ChB,aAA5C;AAEAiB,MAAM,CAACC,OAAP,GAAiBhB,mBAAjB","sourcesContent":["/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\n/**\n * Strict mode error constructor\n *\n * @param {String} type\n * @param {String} value\n * @inherits MongooseError\n * @api private\n */\n\nfunction ObjectExpectedError(path, val) {\n  const typeDescription = Array.isArray(val) ? 'array' : 'primitive value';\n  MongooseError.call(this, 'Tried to set nested object field `' + path +\n    `\\` to ${typeDescription} \\`` + val + '` and strict mode is set to throw.');\n  this.name = 'ObjectExpectedError';\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.path = path;\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nObjectExpectedError.prototype = Object.create(MongooseError.prototype);\nObjectExpectedError.prototype.constructor = MongooseError;\n\nmodule.exports = ObjectExpectedError;\n"]},"metadata":{},"sourceType":"script"}