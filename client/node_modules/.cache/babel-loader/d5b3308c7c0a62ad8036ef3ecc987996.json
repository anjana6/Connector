{"ast":null,"code":"'use strict';\n/*!\n * ignore\n */\n\nconst get = require('../get');\n\nmodule.exports = applyTimestampsToUpdate;\n/*!\n * ignore\n */\n\nfunction applyTimestampsToUpdate(now, createdAt, updatedAt, currentUpdate, options) {\n  const updates = currentUpdate;\n  let _updates = updates;\n  const overwrite = get(options, 'overwrite', false);\n  const timestamps = get(options, 'timestamps', true); // Support skipping timestamps at the query level, see gh-6980\n\n  if (!timestamps || updates == null) {\n    return currentUpdate;\n  }\n\n  const skipCreatedAt = timestamps != null && timestamps.createdAt === false;\n  const skipUpdatedAt = timestamps != null && timestamps.updatedAt === false;\n\n  if (overwrite) {\n    if (currentUpdate && currentUpdate.$set) {\n      currentUpdate = currentUpdate.$set;\n      updates.$set = {};\n      _updates = updates.$set;\n    }\n\n    if (!skipUpdatedAt && updatedAt && !currentUpdate[updatedAt]) {\n      _updates[updatedAt] = now;\n    }\n\n    if (!skipCreatedAt && createdAt && !currentUpdate[createdAt]) {\n      _updates[createdAt] = now;\n    }\n\n    return updates;\n  }\n\n  currentUpdate = currentUpdate || {};\n  updates.$set = updates.$set || {};\n\n  if (!skipUpdatedAt && updatedAt && (!currentUpdate.$currentDate || !currentUpdate.$currentDate[updatedAt])) {\n    updates.$set[updatedAt] = now;\n\n    if (updates.hasOwnProperty(updatedAt)) {\n      delete updates[updatedAt];\n    }\n  }\n\n  if (!skipCreatedAt && createdAt) {\n    if (currentUpdate[createdAt]) {\n      delete currentUpdate[createdAt];\n    }\n\n    if (currentUpdate.$set && currentUpdate.$set[createdAt]) {\n      delete currentUpdate.$set[createdAt];\n    }\n\n    updates.$setOnInsert = updates.$setOnInsert || {};\n    updates.$setOnInsert[createdAt] = now;\n  }\n\n  if (Object.keys(updates.$set).length === 0) {\n    delete updates.$set;\n  }\n\n  return updates;\n}","map":{"version":3,"sources":["D:/Other/Git/Developer-Connector/node_modules/mongoose/lib/helpers/update/applyTimestampsToUpdate.js"],"names":["get","require","module","exports","applyTimestampsToUpdate","now","createdAt","updatedAt","currentUpdate","options","updates","_updates","overwrite","timestamps","skipCreatedAt","skipUpdatedAt","$set","$currentDate","hasOwnProperty","$setOnInsert","Object","keys","length"],"mappings":"AAAA;AAEA;;;;AAIA,MAAMA,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,uBAAjB;AAEA;;;;AAIA,SAASA,uBAAT,CAAiCC,GAAjC,EAAsCC,SAAtC,EAAiDC,SAAjD,EAA4DC,aAA5D,EAA2EC,OAA3E,EAAoF;AAClF,QAAMC,OAAO,GAAGF,aAAhB;AACA,MAAIG,QAAQ,GAAGD,OAAf;AACA,QAAME,SAAS,GAAGZ,GAAG,CAACS,OAAD,EAAU,WAAV,EAAuB,KAAvB,CAArB;AACA,QAAMI,UAAU,GAAGb,GAAG,CAACS,OAAD,EAAU,YAAV,EAAwB,IAAxB,CAAtB,CAJkF,CAMlF;;AACA,MAAI,CAACI,UAAD,IAAeH,OAAO,IAAI,IAA9B,EAAoC;AAClC,WAAOF,aAAP;AACD;;AAED,QAAMM,aAAa,GAAGD,UAAU,IAAI,IAAd,IAAsBA,UAAU,CAACP,SAAX,KAAyB,KAArE;AACA,QAAMS,aAAa,GAAGF,UAAU,IAAI,IAAd,IAAsBA,UAAU,CAACN,SAAX,KAAyB,KAArE;;AAEA,MAAIK,SAAJ,EAAe;AACb,QAAIJ,aAAa,IAAIA,aAAa,CAACQ,IAAnC,EAAyC;AACvCR,MAAAA,aAAa,GAAGA,aAAa,CAACQ,IAA9B;AACAN,MAAAA,OAAO,CAACM,IAAR,GAAe,EAAf;AACAL,MAAAA,QAAQ,GAAGD,OAAO,CAACM,IAAnB;AACD;;AACD,QAAI,CAACD,aAAD,IAAkBR,SAAlB,IAA+B,CAACC,aAAa,CAACD,SAAD,CAAjD,EAA8D;AAC5DI,MAAAA,QAAQ,CAACJ,SAAD,CAAR,GAAsBF,GAAtB;AACD;;AACD,QAAI,CAACS,aAAD,IAAkBR,SAAlB,IAA+B,CAACE,aAAa,CAACF,SAAD,CAAjD,EAA8D;AAC5DK,MAAAA,QAAQ,CAACL,SAAD,CAAR,GAAsBD,GAAtB;AACD;;AACD,WAAOK,OAAP;AACD;;AACDF,EAAAA,aAAa,GAAGA,aAAa,IAAI,EAAjC;AAEAE,EAAAA,OAAO,CAACM,IAAR,GAAeN,OAAO,CAACM,IAAR,IAAgB,EAA/B;;AACA,MAAI,CAACD,aAAD,IAAkBR,SAAlB,KACC,CAACC,aAAa,CAACS,YAAf,IAA+B,CAACT,aAAa,CAACS,YAAd,CAA2BV,SAA3B,CADjC,CAAJ,EAC6E;AAC3EG,IAAAA,OAAO,CAACM,IAAR,CAAaT,SAAb,IAA0BF,GAA1B;;AACA,QAAIK,OAAO,CAACQ,cAAR,CAAuBX,SAAvB,CAAJ,EAAuC;AACrC,aAAOG,OAAO,CAACH,SAAD,CAAd;AACD;AACF;;AAED,MAAI,CAACO,aAAD,IAAkBR,SAAtB,EAAiC;AAC/B,QAAIE,aAAa,CAACF,SAAD,CAAjB,EAA8B;AAC5B,aAAOE,aAAa,CAACF,SAAD,CAApB;AACD;;AACD,QAAIE,aAAa,CAACQ,IAAd,IAAsBR,aAAa,CAACQ,IAAd,CAAmBV,SAAnB,CAA1B,EAAyD;AACvD,aAAOE,aAAa,CAACQ,IAAd,CAAmBV,SAAnB,CAAP;AACD;;AAEDI,IAAAA,OAAO,CAACS,YAAR,GAAuBT,OAAO,CAACS,YAAR,IAAwB,EAA/C;AACAT,IAAAA,OAAO,CAACS,YAAR,CAAqBb,SAArB,IAAkCD,GAAlC;AACD;;AAED,MAAIe,MAAM,CAACC,IAAP,CAAYX,OAAO,CAACM,IAApB,EAA0BM,MAA1B,KAAqC,CAAzC,EAA4C;AAC1C,WAAOZ,OAAO,CAACM,IAAf;AACD;;AAED,SAAON,OAAP;AACD","sourcesContent":["'use strict';\n\n/*!\n * ignore\n */\n\nconst get = require('../get');\n\nmodule.exports = applyTimestampsToUpdate;\n\n/*!\n * ignore\n */\n\nfunction applyTimestampsToUpdate(now, createdAt, updatedAt, currentUpdate, options) {\n  const updates = currentUpdate;\n  let _updates = updates;\n  const overwrite = get(options, 'overwrite', false);\n  const timestamps = get(options, 'timestamps', true);\n\n  // Support skipping timestamps at the query level, see gh-6980\n  if (!timestamps || updates == null) {\n    return currentUpdate;\n  }\n\n  const skipCreatedAt = timestamps != null && timestamps.createdAt === false;\n  const skipUpdatedAt = timestamps != null && timestamps.updatedAt === false;\n\n  if (overwrite) {\n    if (currentUpdate && currentUpdate.$set) {\n      currentUpdate = currentUpdate.$set;\n      updates.$set = {};\n      _updates = updates.$set;\n    }\n    if (!skipUpdatedAt && updatedAt && !currentUpdate[updatedAt]) {\n      _updates[updatedAt] = now;\n    }\n    if (!skipCreatedAt && createdAt && !currentUpdate[createdAt]) {\n      _updates[createdAt] = now;\n    }\n    return updates;\n  }\n  currentUpdate = currentUpdate || {};\n\n  updates.$set = updates.$set || {};\n  if (!skipUpdatedAt && updatedAt &&\n      (!currentUpdate.$currentDate || !currentUpdate.$currentDate[updatedAt])) {\n    updates.$set[updatedAt] = now;\n    if (updates.hasOwnProperty(updatedAt)) {\n      delete updates[updatedAt];\n    }\n  }\n\n  if (!skipCreatedAt && createdAt) {\n    if (currentUpdate[createdAt]) {\n      delete currentUpdate[createdAt];\n    }\n    if (currentUpdate.$set && currentUpdate.$set[createdAt]) {\n      delete currentUpdate.$set[createdAt];\n    }\n\n    updates.$setOnInsert = updates.$setOnInsert || {};\n    updates.$setOnInsert[createdAt] = now;\n  }\n\n  if (Object.keys(updates.$set).length === 0) {\n    delete updates.$set;\n  }\n\n  return updates;\n}\n"]},"metadata":{},"sourceType":"script"}